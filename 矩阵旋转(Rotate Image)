//题目：顺时针旋转矩阵90度
//方法：对每一圈进行单独的旋转，旋转总共分为4步，左边放到上边，下边放到左边，右边放到下边，上边放到右边
class Solution {
public:
	void rotate(vector<vector<int> > &matrix) 
	{
		int n = matrix.size();
		int startx = 0;
		while (n > 0)
		{
			cycle(matrix,n,startx++); //对每一圈轮番进行旋转
			n = n - 2;
		}
	}
	void cycle(vector<vector<int> >&matrix, int length, int startx)
	{
		int starty = startx;    
		vector<int> temp;
		temp.resize(length);      
		for (int i = 0; i < length;++i)     //先将圈上方的数字存起来，放置被覆盖
			temp[i]= matrix[startx][starty+i];
		for (int i = 0; i < length-1; ++i)  //将左边放在上边
			matrix[startx][starty+i] = matrix[startx + length - 1-i][starty];
		startx = startx + length - 1;   
		for (int i = 0; i < length-1; ++i)   //将下边放在左边 
			matrix[startx-i][starty] = matrix[startx][starty + length - 1-i];
		starty = starty + length - 1;
		for (int i = 0; i < length-1; ++i)  //将右边放在下边
			matrix[startx][starty-i] = matrix[startx - length + 1+i][starty];
		startx = startx - length + 1;
		for (int i = 0; i < length-1; ++i)  //将上边放在右边
			matrix[startx+i][starty] = temp[i];
	}
};
